name: Nova Pioneers CD

# Trigger on push to main (after PR merge)
on:
  push:
    branches: [main]

jobs:
  # Job 1: Build and Push Docker Images
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api-gateway, auth-service, admin-service, parents_kids-service, teachers_courses-service]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ${{ matrix.service }}
        run: |
          cd backend-services/${{ matrix.service }}
#          docker build -f Dockerfile.prod -t ${{ secrets.DOCKER_USERNAME }}/nova-pioneers:${{ matrix.service }}-${{ github.sha }} .
          docker build -f Dockerfile.prod -t ${{ secrets.DOCKER_USERNAME }}/nova-pioneers:${{ matrix.service }}-latest .
#          docker push ${{ secrets.DOCKER_USERNAME }}/nova-pioneers:${{ matrix.service }}-${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/nova-pioneers:${{ matrix.service }}-latest

  # Job 2: Build and Push Frontend
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend
        run: |
          cd front-end
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/nova-pioneers:frontend-${{ github.sha }} .
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nova-pioneers:frontend-latest .
#          docker push ${{ secrets.DOCKER_USERNAME }}/nova-pioneers:frontend-${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/nova-pioneers:frontend-latest

  # Job 3: Deploy to OCI VM
  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push, build-frontend]

    steps:
      - name: Deploy to OCI VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.OCI_HOST }}
          username: ubuntu
          key: ${{ secrets.OCI_SSH_KEY }}
          script: |
            # Navigate to project directory
            cd /opt/nova-pioneers
            
            # Create .env file from secrets
            cat > .env << EOF
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=5432
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_EXPIRATION=86400000
            ADMIN_SERVICE_URI=http://admin-service:9091
            AUTH_SERVICE_URI=http://auth-service:9092
            PARENTS_KIDS_SERVICE_URI=http://parents-kids-service:9093
            TEACHERS_COURSES_SERVICE_URI=http://teachers-courses-service:9094
            SPRING_DEVTOOLS_RESTART_ENABLED=false
            SPRING_DEVTOOLS_LIVERELOAD_ENABLED=false
            UPLOAD_DIR=./uploads
            EOF
            
            # Pull latest images
            docker-compose -f docker-compose.prod.yml pull
            
            # Restart services
            docker-compose -f docker-compose.prod.yml up -d
            
            # Clean up old images
            docker image prune -f
